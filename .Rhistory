#    results.file <- tempfile("iteration_", tmpdir=getwd())
#     save(results.0, results.2.5, results.5, results.10, results.20,
#          results.40, results.80, p, file=results.file)
#
power = mean(out,na.rm=TRUE)
return(list(power=power,res=res,out=out))
}
mypower <- powercalc(200)
mypower
require(lme4)
require(lmerTest)
require(base)
recordWarnings <- function(expr)
{
warn = NULL
frame_number <- sys.nframe()
ans <- withCallingHandlers(expr, warning = function(w)
{
assign("warn", w, envir = sys.frame(frame_number))
invokeRestart("muffleWarning")
})
list(ans, warn)
}
powercalc<-function(N_iters = 100)
{
res<-out<-vector(mode="numeric",length=N_iters)
set.seed(1)
for(i in 1:N_iters)
{
#  if(i %% 10==0) {
#    # Print on the screen some message
#    cat(paste0("iteration: ", i, "\n"))
# }
print(i)
mydat <- data_sims(nItem = 20, nsub = 25, ncond = 2, nsess = 4, ngroup = 2,int_eff=0.075,sess_effect = c(.7,.75,.8,.85))
#error handling case #1
poss.err.mod1 = recordWarnings(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))
#print(poss.err.mod1[[2]])
res[i] <-ifelse(!is.null(poss.err.mod1[[2]]),NA,summary(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))$coefficients[5,5])
#real work #1
# if(!inherits(poss.err.mod1, "error")|!inherits(poss.err.mod1, "warning")){
# res[i]<-summary(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))$coeffcients[5,5]}
# else{res[i]<-NA}
if(is.na(res[i]))
{out[i]<-NA}
else{out[i] <- ifelse(res[i]>0.05,0,1)}
print(paste0('res=',res[i]))
print(paste0('out=',out[i]))
cat("","\n")
}
#    results.file <- tempfile("iteration_", tmpdir=getwd())
#     save(results.0, results.2.5, results.5, results.10, results.20,
#          results.40, results.80, p, file=results.file)
#
power = mean(out,na.rm=TRUE)
return(list(power=power,res=res,out=out))
}
mypower <- powercalc(200)
require(lme4)
require(lmerTest)
require(base)
recordWarnings <- function(expr)
{
warn = NULL
frame_number <- sys.nframe()
ans <- withCallingHandlers(expr, warning = function(w)
{
assign("warn", w, envir = sys.frame(frame_number))
invokeRestart("muffleWarning")
})
list(ans, warn)
}
powercalc<-function(N_iters = 100)
{
res<-out<-vector(mode="numeric",length=N_iters)
set.seed(1)
for(i in 1:N_iters)
{
#  if(i %% 10==0) {
#    # Print on the screen some message
#    cat(paste0("iteration: ", i, "\n"))
# }
print(i)
mydat <- data_sims(nItem = 20, nsub = 25, ncond = 2, nsess = 4, ngroup = 2,int_eff=0.075,sess_effect = c(.7,.75,.8,.85))
#error handling case #1
poss.err.mod1 = recordWarnings(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))
print(poss.err.mod1[[2]])
res[i] <-ifelse(!is.null(poss.err.mod1[[2]]),NA,summary(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))$coefficients[5,5])
#real work #1
# if(!inherits(poss.err.mod1, "error")|!inherits(poss.err.mod1, "warning")){
# res[i]<-summary(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))$coeffcients[5,5]}
# else{res[i]<-NA}
if(is.na(res[i]))
{out[i]<-NA}
else{out[i] <- ifelse(res[i]>0.05,0,1)}
print(paste0('res=',res[i]))
print(paste0('out=',out[i]))
cat("","\n")
}
#    results.file <- tempfile("iteration_", tmpdir=getwd())
#     save(results.0, results.2.5, results.5, results.10, results.20,
#          results.40, results.80, p, file=results.file)
#
power = mean(out,na.rm=TRUE)
return(list(power=power,res=res,out=out))
}
mypower <- powercalc(200)
require(lme4)
require(lmerTest)
require(base)
options(warn=2)
recordWarnings <- function(expr)
{
warn = NULL
frame_number <- sys.nframe()
ans <- withCallingHandlers(expr, warning = function(w)
{
assign("warn", w, envir = sys.frame(frame_number))
invokeRestart("muffleWarning")
})
list(ans, warn)
}
powercalc<-function(N_iters = 100)
{
res<-out<-vector(mode="numeric",length=N_iters)
set.seed(1)
for(i in 1:N_iters)
{
#  if(i %% 10==0) {
#    # Print on the screen some message
#    cat(paste0("iteration: ", i, "\n"))
# }
print(i)
mydat <- data_sims(nItem = 20, nsub = 25, ncond = 2, nsess = 4, ngroup = 2,int_eff=0.075,sess_effect = c(.7,.75,.8,.85))
#error handling case #1
poss.err.mod1 = recordWarnings(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))
print(poss.err.mod1[[2]])
res[i] <-ifelse(!is.null(poss.err.mod1[[2]]),NA,summary(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))$coefficients[5,5])
#real work #1
# if(!inherits(poss.err.mod1, "error")|!inherits(poss.err.mod1, "warning")){
# res[i]<-summary(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))$coeffcients[5,5]}
# else{res[i]<-NA}
if(is.na(res[i]))
{out[i]<-NA}
else{out[i] <- ifelse(res[i]>0.05,0,1)}
print(paste0('res=',res[i]))
print(paste0('out=',out[i]))
cat("","\n")
}
#    results.file <- tempfile("iteration_", tmpdir=getwd())
#     save(results.0, results.2.5, results.5, results.10, results.20,
#          results.40, results.80, p, file=results.file)
#
power = mean(out,na.rm=TRUE)
return(list(power=power,res=res,out=out))
}
mypower <- powercalc(200)
poss.err.mod1
require(lme4)
require(lmerTest)
require(base)
options(warn=2)
recordWarnings <- function(expr)
{
warn = NULL
frame_number <- sys.nframe()
ans <- withCallingHandlers(expr, warning = function(w)
{
assign("warn", w, envir = sys.frame(frame_number))
invokeRestart("muffleWarning")
})
list(ans, warn)
}
powercalc<-function(N_iters = 100)
{
res<-out<-vector(mode="numeric",length=N_iters)
set.seed(1)
for(i in 1:N_iters)
{
#  if(i %% 10==0) {
#    # Print on the screen some message
#    cat(paste0("iteration: ", i, "\n"))
# }
print(i)
mydat <- data_sims(nItem = 20, nsub = 25, ncond = 2, nsess = 4, ngroup = 2,int_eff=0.075,sess_effect = c(.7,.75,.8,.85))
#error handling case #1
poss.err.mod1 = recordWarnings(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))
print(poss.err.mod1)
res[i] <-ifelse(!is.null(poss.err.mod1[[2]]),NA,summary(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))$coefficients[5,5])
#real work #1
# if(!inherits(poss.err.mod1, "error")|!inherits(poss.err.mod1, "warning")){
# res[i]<-summary(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))$coeffcients[5,5]}
# else{res[i]<-NA}
if(is.na(res[i]))
{out[i]<-NA}
else{out[i] <- ifelse(res[i]>0.05,0,1)}
print(paste0('res=',res[i]))
print(paste0('out=',out[i]))
cat("","\n")
}
#    results.file <- tempfile("iteration_", tmpdir=getwd())
#     save(results.0, results.2.5, results.5, results.10, results.20,
#          results.40, results.80, p, file=results.file)
#
power = mean(out,na.rm=TRUE)
return(list(power=power,res=res,out=out))
}
mypower <- powercalc(200)
require(lme4)
require(lmerTest)
require(base)
options(warn=2)
recordWarnings <- function(expr)
{
warn = NULL
frame_number <- sys.nframe()
ans <- withCallingHandlers(expr, warning = function(w)
{
assign("warn", w, envir = sys.frame(frame_number))
invokeRestart("muffleWarning")
})
list(ans, warn)
}
powercalc<-function(N_iters = 100)
{
res<-out<-vector(mode="numeric",length=N_iters)
set.seed(1)
for(i in 1:N_iters)
{
#  if(i %% 10==0) {
#    # Print on the screen some message
#    cat(paste0("iteration: ", i, "\n"))
# }
print(i)
mydat <- data_sims(nItem = 20, nsub = 25, ncond = 2, nsess = 4, ngroup = 2,int_eff=0.075,sess_effect = c(.7,.75,.8,.85))
#error handling case #1
poss.err.mod1 = recordWarnings(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))
print(poss.err.mod1)
res[i] <-ifelse(!is.null(poss.err.mod1[[2]]),NA,summary(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))$coefficients[5,5])
#real work #1
# if(!inherits(poss.err.mod1, "error")|!inherits(poss.err.mod1, "warning")){
# res[i]<-summary(lmer(Correct ~ Group*Condition*Session + (1|Subject)+(1|Item), mydat))$coeffcients[5,5]}
# else{res[i]<-NA}
if(is.na(res[i]))
{out[i]<-NA}
else{out[i] <- ifelse(res[i]>0.05,0,1)}
print(paste0('res=',res[i]))
print(paste0('out=',out[i]))
cat("","\n")
}
#    results.file <- tempfile("iteration_", tmpdir=getwd())
#     save(results.0, results.2.5, results.5, results.10, results.20,
#          results.40, results.80, p, file=results.file)
#
power = mean(out,na.rm=TRUE)
return(list(power=power,res=res,out=out))
}
mypower <- powercalc(150)
?rbinom
?rbern
?rbernoulli
rbinom(1,10,0.1)
rbinom(2,10,0.1)
rbinom(10,1,0.1)
rbinom(10,0,0.1)
rbinom(10,10,0.1)
rbinom(10,1,0.1)
rbinom(10,10,0.5)
library(ggplot2)
data(ChickWeight)
ChickWeight2 <- subset(ChickWeight, Diet == 1|Diet == 2)
ChickWeight2$Intervention <- ChickWeight2$Diet
levels(ChickWeight2$Intervention) <- c("Control","Intervention")
ChickWeight2$Outcome <-ChickWeight2$weight
reg1 <- lm(Outcome ~ Time, data = subset(ChickWeight2, Diet == 1))
reg2 <- lm(Outcome ~ Time, data = subset(ChickWeight2, Diet == 2))
predicted_df1 <- data.frame(Outcome = predict(reg1, subset(ChickWeight2, Diet == 1)), Time=subset(ChickWeight2, Diet == 1)$Time, Chick=subset(ChickWeight2, Diet == 1)$Chick)
predicted_df2 <- data.frame(Outcome = predict(reg2, subset(ChickWeight2, Diet == 2)), Time=subset(ChickWeight2, Diet == 2)$Time,Chick=subset(ChickWeight2, Diet == 2)$Chick)
ggplot(data=ChickWeight2,aes(x = Time, y = Outcome, group = Chick)) + geom_line(aes(colour=Intervention),alpha=0.5) +
geom_point(aes(colour=Intervention),alpha=0.5) + theme_bw() + geom_line(data = predicted_df1, aes(x=Time, y=Outcome),linetype='dashed') + geom_line(data = predicted_df2, aes(x=Time, y=Outcome))
library(tidyverse)
library(knitr)
library(kableExtra)
library(flextable)
options(kableExtra.html.bsTable = T)
dt <- matrix(c('Question',	'Does the intervention work under ideal circumstance?',	'Does the intervention work in real-world practice?',
'Setting',	'Resource-intensive (ideal) setting',	'Real-world everyday clinical setting',
'Study population',	'Highly selected, homogenous population (Several exclusion criteria)', 'Heterogeneous population (Few to no exclusion criteria)',
'Providers',	'Highly experienced and trained', 'Representative usual providers',
'Intervention',	'Strictly enforced and standardized. No concurrent interventions',	'Applied with flexibility. Concurrent interventions and cross-over permitted'),ncol=3,byrow=TRUE)
dt <- as.data.frame(dt)
colnames(dt) <- c(' ','Efficacy study',	'Effectiveness study')
mytab1 <- flextable(dt)
mytab1 <- theme_box(mytab1)
mytab1 <- align( mytab1, align = "left", part = "all" )
mytab1 <- autofit(mytab1)
mytab1 <- bold(mytab1, j = " ")
mytab1 <- bold(mytab1, part = "header")
mytab1 <- set_caption(mytab1, "Table 11.1: Definitions of efficacy (explanatory trial) and effectiveness (pragmatic trial) in trial designs")
mytab1
# knitr::kable(dt,escape = F, align = "c", booktabs = T, caption = 'Differences between efficacy and effectiveness studies') %>%
#   kable_styling(c("striped", "bordered"), latex_options = "striped", full_width = F)
library(tidyverse)
library(knitr)
library(kableExtra)
library(flextable)
options(kableExtra.html.bsTable = T)
dt <- matrix(c('Question',	'Does the intervention work under ideal circumstance?',	'Does the intervention work in real-world practice?',
'Setting',	'Resource-intensive (ideal) setting',	'Real-world everyday clinical setting',
'Study population',	'Highly selected, homogenous population (Several exclusion criteria)', 'Heterogeneous population (Few to no exclusion criteria)',
'Providers',	'Highly experienced and trained', 'Representative usual providers',
'Intervention',	'Strictly enforced and standardized. No concurrent interventions',	'Applied with flexibility. Concurrent interventions and cross-over permitted'),ncol=3,byrow=TRUE)
dt <- as.data.frame(dt)
colnames(dt) <- c(' ','Efficacy study',	'Effectiveness study')
mytab1 <- flextable(dt)
mytab1 <- theme_box(mytab1)
mytab1 <- align( mytab1, align = "left", part = "all" )
mytab1 <- autofit(mytab1)
mytab1 <- bold(mytab1, j = " ")
mytab1 <- bold(mytab1, part = "header")
mytab1 <- set_caption(mytab1, "Table 11.1: Definitions of efficacy (explanatory trial) and effectiveness (pragmatic trial) in trial designs")
mytab1
# knitr::kable(dt,escape = F, align = "c", booktabs = T, caption = 'Differences between efficacy and effectiveness studies') %>%
#   kable_styling(c("striped", "bordered"), latex_options = "striped", full_width = F)
library(tidyverse)
library(knitr)
#library(kableExtra)
library(flextable)
options(kableExtra.html.bsTable = T)
dt13 <- matrix(c(
'(1)',	'Phrase the primary and secondary study questions according to the principles of evidence-based medicine','',
'(2)',	'Distinguish between primary and secondary outcomes of the study','',
'(3)',	'Define inclusion criteria','',
'(4)',	'Define exclusion criteria', 'Define any important risk factors related to any of the primary outcomes',
'(5)',	'Define treatment options',	'Identify the most frequently used treatments from existing database',
'(6)',	'Define appropriate study design according to primary study questions (superiority or equivalence or noninferiority study and set the limits for each study type)',	'Any pragmatic trial is a descriptive trial. There is only one common design for descriptive trials. Mention 95% CI',
'(7)',	'Define the hypothesis (expected difference of experimental and control), mention α-/β-error, calculate the needed number of patients to confirm the hypothesis', 'Any of the selected individual treatments is considered the best possible treatment (in the individual situation for the individual patient)',
'(8)',	'Ask eligible patients to sign informed consent for randomization, evaluation, and publication of data', 'Ask eligible patients to sign informed consent for evaluation and publication of data',
'(9)',	'Allocate the patients randomly to the treatment options of the trial',	'Allocate patients to treatment options according to individual preferences and results of shared decision making',
'(10)', 'Guarantee follow-up long enough to detect outcomes and most of the adverse effects','',
'(11)', 'Compare the results of the randomized groups',	'Compare only results of groups with identical baseline risks (ie, stratified according to high, intermediate, and low risk). Include results of the “any other treatment” group for specificity control',
'(12)', 'Apply the intent-to-treat (ITT) principle according to step (9)', 'Application of the ITT principle is not necessary as the risk groups were stratified',
'(13)', 'Confirm statistical significance only if clinical effect is relevant (save statistical energy)',''),ncol=3,byrow=TRUE)
dt13 <- as.data.frame(dt13)
colnames(dt13) <- c('Step',	'Explanatory trial (conclusions derived from experimental studies completed under ideal conditions)',	'Pragmatic trial (conclusions derived from observations of real-world health care)')
myft <- flextable(dt13)
myft <- theme_box(myft)
myft <- myft %>% merge_at(i = 1, j = 2:3)
myft <- myft %>% merge_at(i = 2, j = 2:3)
myft <- myft %>% merge_at(i = 3, j = 2:3)
myft <- myft %>% merge_at(i = 10, j = 2:3)
myft <- myft %>% merge_at(i = 13, j = 2:3)
myft <- align( myft, align = "center", part = "all" )
myft <- bold(myft, j = "Step")
myft <- bold(myft, part = "header")
myft <- autofit(myft)
myft <- set_caption(myft, "Table 11.2: Thirteen steps to assess efficacy (explanatory trial) and effectiveness (pragmatic trial)")
myft
ChickWeight2
str(ChickWeight2)
library(ggplot2)
data(ChickWeight)
ChickWeight2 <- subset(ChickWeight, Diet == 1|Diet == 2)
ChickWeight2$Intervention <- ChickWeight2$Diet
levels(ChickWeight2$Intervention) <- c("Control","Intervention")
ChickWeight2$Outcome <-ChickWeight2$weight
reg1 <- lm(Outcome ~ Time, data = subset(ChickWeight2, Intervention == 'Control'))
reg2 <- lm(Outcome ~ Time, data = subset(ChickWeight2, Intervention == 'Intervention'))
predicted_df1 <- data.frame(Outcome = predict(reg1, subset(ChickWeight2, Intervention == 'Control')), Time=subset(ChickWeight2, Intervention == 'Control')$Time, Chick=subset(ChickWeight2, Intervention == 'Control')$Chick)
predicted_df2 <- data.frame(Outcome = predict(reg2, subset(ChickWeight2, Intervention == 'Intervention')), Time=subset(ChickWeight2, Intervention == 'Intervention')$Time,Chick=subset(ChickWeight2, Intervention == 'Intervention')$Chick)
ggplot(data=ChickWeight2,aes(x = Time, y = Outcome, group = Chick)) + geom_line(aes(colour=Intervention),alpha=0.5) +
geom_point(aes(colour=Intervention),alpha=0.5) + theme_bw() + geom_line(data = predicted_df1, aes(x=Time, y=Outcome),linetype='dashed') + geom_line(data = predicted_df2, aes(x=Time, y=Outcome))
library(ggplot2)
data(ChickWeight)
ChickWeight2 <- subset(ChickWeight, Diet == 1|Diet == 2)
ChickWeight2$Intervention <- ChickWeight2$Diet
ChickWeight2$Intervention <- factor(ChickWeight2$Intervention,levels("Control","Intervention"))
library(ggplot2)
data(ChickWeight)
ChickWeight2 <- subset(ChickWeight, Diet == 1|Diet == 2)
ChickWeight2$Intervention <- ChickWeight2$Diet
ChickWeight2$Intervention <- factor(ChickWeight2$Intervention,levels=c("Control","Intervention"))
ChickWeight2$Outcome <-ChickWeight2$weight
reg1 <- lm(Outcome ~ Time, data = subset(ChickWeight2, Intervention == 'Control'))
head(ChickWeight2)
library(ggplot2)
data(ChickWeight)
ChickWeight2 <- subset(ChickWeight, Diet == 1|Diet == 2)
ChickWeight2$Intervention <- ChickWeight2$Diet
#ChickWeight2$Intervention <- factor(ChickWeight2$Intervention,levels=c("Control","Intervention"))
ChickWeight2$Outcome <-ChickWeight2$weight
reg1 <- lm(Outcome ~ Time, data = subset(ChickWeight2, Intervention == 'Control'))
head(ChickWeight2)
?levels
library(ggplot2)
data(ChickWeight)
ChickWeight2 <- subset(ChickWeight, Diet == 1|Diet == 2)
ChickWeight2$Intervention <- ChickWeight2$Diet
base::levels(ChickWeight2$Intervention)=c("Control","Intervention")
ChickWeight2$Outcome <-ChickWeight2$weight
reg1 <- lm(Outcome ~ Time, data = subset(ChickWeight2, Intervention == 'Control'))
reg2 <- lm(Outcome ~ Time, data = subset(ChickWeight2, Intervention == 'Intervention'))
predicted_df1 <- data.frame(Outcome = predict(reg1, subset(ChickWeight2, Intervention == 'Control')), Time=subset(ChickWeight2, Intervention == 'Control')$Time, Chick=subset(ChickWeight2, Intervention == 'Control')$Chick)
predicted_df2 <- data.frame(Outcome = predict(reg2, subset(ChickWeight2, Intervention == 'Intervention')), Time=subset(ChickWeight2, Intervention == 'Intervention')$Time,Chick=subset(ChickWeight2, Intervention == 'Intervention')$Chick)
ggplot(data=ChickWeight2,aes(x = Time, y = Outcome, group = Chick)) + geom_line(aes(colour=Intervention),alpha=0.5) +
geom_point(aes(colour=Intervention),alpha=0.5) + theme_bw() + geom_line(data = predicted_df1, aes(x=Time, y=Outcome),linetype='dashed') + geom_line(data = predicted_df2, aes(x=Time, y=Outcome))
?recode
library(ggplot2)
data(ChickWeight)
ChickWeight2 <- subset(ChickWeight, Diet == 1|Diet == 2)
ChickWeight2$Intervention <- ChickWeight2$Diet
#levels(ChickWeight2$Intervention)=c("Control","Intervention")
ChickWeight2$Intervention<-fct_recode(ChickWeight2$Intervention, 1 = "Control", 2 = "Intervention")
library(ggplot2)
library(forcats)
data(ChickWeight)
ChickWeight2 <- subset(ChickWeight, Diet == 1|Diet == 2)
ChickWeight2$Intervention <- ChickWeight2$Diet
#levels(ChickWeight2$Intervention)=c("Control","Intervention")
ChickWeight2$Intervention<-fct_recode(ChickWeight2$Intervention, 1 = "Control", 2 = "Intervention")
fct_recode(ChickWeight2$Intervention, 1 = "Control", 2 = "Intervention")
library(ggplot2)
library(forcats)
data(ChickWeight)
ChickWeight2 <- subset(ChickWeight, Diet == 1|Diet == 2)
ChickWeight2$Intervention <- ChickWeight2$Diet
#levels(ChickWeight2$Intervention)=c("Control","Intervention")
ChickWeight2<-chickWeight2 %>% mutate(Intervention = fct_recode(ChickWeight2$Intervention, 1 = "Control", 2 = "Intervention"))
library(ggplot2)
library(forcats)
data(ChickWeight)
ChickWeight2 <- subset(ChickWeight, Diet == 1|Diet == 2)
ChickWeight2$Intervention <- ChickWeight2$Diet
#levels(ChickWeight2$Intervention)=c("Control","Intervention")
ChickWeight2<-ChickWeight2 %>% mutate(Intervention = fct_recode(Intervention, Control = "1", Intervention = "2"))
ChickWeight2$Outcome <-ChickWeight2$weight
reg1 <- lm(Outcome ~ Time, data = subset(ChickWeight2, Intervention == 'Control'))
reg2 <- lm(Outcome ~ Time, data = subset(ChickWeight2, Intervention == 'Intervention'))
predicted_df1 <- data.frame(Outcome = predict(reg1, subset(ChickWeight2, Intervention == 'Control')), Time=subset(ChickWeight2, Intervention == 'Control')$Time, Chick=subset(ChickWeight2, Intervention == 'Control')$Chick)
predicted_df2 <- data.frame(Outcome = predict(reg2, subset(ChickWeight2, Intervention == 'Intervention')), Time=subset(ChickWeight2, Intervention == 'Intervention')$Time,Chick=subset(ChickWeight2, Intervention == 'Intervention')$Chick)
ggplot(data=ChickWeight2,aes(x = Time, y = Outcome, group = Chick)) + geom_line(aes(colour=Intervention),alpha=0.5) +
geom_point(aes(colour=Intervention),alpha=0.5) + theme_bw() + geom_line(data = predicted_df1, aes(x=Time, y=Outcome),linetype='dashed') + geom_line(data = predicted_df2, aes(x=Time, y=Outcome))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(flextable)
set.seed(123)
probabilities <- c(0.1,0,0.1,0.3,0.5)
mydraws <- base::sample.int(5,20,prob=probabilities,replace=TRUE)
#ggplot(as.data.frame(mydraws),aes(x=mydraws))+geom_bar()+theme_bw()
df <- as.data.frame(mydraws) %>%
group_by(mydraws) %>%
summarise(counts = n())
df[5,]<-c(2,0)
df
mydraws
str(df)
library(tidyverse)
library(flextable)
set.seed(123)
probabilities <- c(0.1,0,0.1,0.3,0.5)
mydraws <- base::sample.int(5,20,prob=probabilities,replace=TRUE)
#ggplot(as.data.frame(mydraws),aes(x=mydraws))+geom_bar()+theme_bw()
df <- as.data.frame(mydraws) %>%
group_by(mydraws) %>%
summarise(counts = n())
df<-as.data.frame(df)
df[5,]<-c(2,0)
df<-df[c(1,5,2,3,4),]
myft <- flextable(df)
myft <- theme_box(myft)
myft <- align(myft, align = "center", part = "all" )
myft <- bold(myft, part = "header")
myft <- autofit(myft)
myft <- colformat_num(x = myft, col_keys = c('mydraws','counts'), big.mark=",", digits = 0, na_str = "N/A")
myft <- set_caption(myft, "Table X: Freqency Table of Discrete random variable categories")
myft
library(tidyverse)
plc_dat <- data.frame(Group=c(rep('No treatment',4),rep('Placebo',40),rep('Intervention',70)))
plc_dat$Group<-factor(plc_dat$Group,levels=c("No treatment","Placebo","Intervention"))
ggplot(data=plc_dat,aes(x=Group))+geom_bar(aes(colour=Group,fill=Group))+theme_bw()+ylab('Outcome') + annotate('text',x=1.3,y=55,label='Placebo Effect') + geom_segment(aes(x=1, xend=1, y=40, yend=5), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=1, xend=1, y=5, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))
library(tidyverse)
plc_dat <- data.frame(Group=c(rep('No treatment',4),rep('Placebo',40),rep('Intervention',70)))
plc_dat$Group<-factor(plc_dat$Group,levels=c("No treatment","Placebo","Intervention"))
ggplot(data=plc_dat,aes(x=Group))+geom_bar(aes(colour=Group,fill=Group))+theme_bw()+ylab('Outcome') + annotate('text',x=0.7,y=20,label='Placebo Effect',angle = 90) + geom_segment(aes(x=1, xend=1, y=40, yend=5), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=1, xend=1, y=5, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))
library(tidyverse)
plc_dat <- data.frame(Group=c(rep('No treatment',4),rep('Placebo',40),rep('Intervention',70)))
plc_dat$Group<-factor(plc_dat$Group,levels=c("No treatment","Placebo","Intervention"))
ggplot(data=plc_dat,aes(x=Group))+geom_bar(aes(colour=Group,fill=Group))+theme_bw()+ylab('Outcome') + annotate('text',x=0.8,y=20,label='Placebo Effect',angle = 90) + geom_segment(aes(x=1, xend=1, y=40, yend=5), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=1, xend=1, y=5, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ annotate('text',x=1.3,y=20,label='Treatment Effect',angle = 90) + geom_segment(aes(x=2, xend=2, y=70, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=2, xend=2, y=40, yend=70), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))
library(tidyverse)
plc_dat <- data.frame(Group=c(rep('No treatment',4),rep('Placebo',40),rep('Intervention',70)))
plc_dat$Group<-factor(plc_dat$Group,levels=c("No treatment","Placebo","Intervention"))
ggplot(data=plc_dat,aes(x=Group))+geom_bar(aes(colour=Group,fill=Group))+theme_bw()+ylab('Outcome') + annotate('text',x=0.8,y=20,label='Placebo Effect',angle = 90) + geom_segment(aes(x=1, xend=1, y=40, yend=5), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=1, xend=1, y=5, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ annotate('text',x=1.3,y=50,label='Treatment Effect',angle = 90) + geom_segment(aes(x=2, xend=2, y=70, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=2, xend=2, y=40, yend=70), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))
library(tidyverse)
plc_dat <- data.frame(Group=c(rep('No treatment',4),rep('Placebo',40),rep('Intervention',70)))
plc_dat$Group<-factor(plc_dat$Group,levels=c("No treatment","Placebo","Intervention"))
ggplot(data=plc_dat,aes(x=Group))+geom_bar(aes(colour=Group,fill=Group))+theme_bw()+ylab('Outcome') + annotate('text',x=0.9,y=20,label='Placebo Effect',angle = 90) + geom_segment(aes(x=1, xend=1, y=40, yend=5), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=1, xend=1, y=5, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ annotate('text',x=1.9,y=50,label='Treatment Effect',angle = 90) + geom_segment(aes(x=2, xend=2, y=70, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=2, xend=2, y=40, yend=70), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))
library(tidyverse)
plc_dat <- data.frame(Group=c(rep('No treatment',4),rep('Placebo',40),rep('Intervention',70)))
plc_dat$Group<-factor(plc_dat$Group,levels=c("No treatment","Placebo","Intervention"))
ggplot(data=plc_dat,aes(x=Group))+geom_bar(aes(colour=Group,fill=Group))+theme_bw()+ylab('Outcome') + annotate('text',x=0.9,y=20,label='Placebo Effect',angle = 90) + geom_segment(aes(x=1, xend=1, y=40, yend=5), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=1, xend=1, y=5, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ annotate('text',x=1.9,y=55,label='Treatment Effect',angle = 90) + geom_segment(aes(x=2, xend=2, y=70, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=2, xend=2, y=40, yend=70), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ annotate('text',x=0.1,y=15,label='Hawthorne Effect',angle = 90) + geom_segment(aes(x=0.6, xend=0.6, y=0, yend=-2), size = 0.2, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=0.6, xend=0.6, y=0, yend=2), size = 0.2, arrow = arrow(length = unit(0.25, "cm")))
library(tidyverse)
plc_dat <- data.frame(Group=c(rep('No treatment',4),rep('Placebo',40),rep('Intervention',70)))
plc_dat$Group<-factor(plc_dat$Group,levels=c("No treatment","Placebo","Intervention"))
ggplot(data=plc_dat,aes(x=Group))+geom_bar(aes(colour=Group,fill=Group))+theme_bw()+ylab('Outcome') + annotate('text',x=0.9,y=20,label='Placebo Effect',angle = 90) + geom_segment(aes(x=1, xend=1, y=40, yend=5), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=1, xend=1, y=5, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ annotate('text',x=1.9,y=55,label='Treatment Effect',angle = 90) + geom_segment(aes(x=2, xend=2, y=70, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=2, xend=2, y=40, yend=70), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ annotate('text',x=0.5,y=15,label='Hawthorne Effect',angle = 90) + geom_segment(aes(x=0.6, xend=0.6, y=-2, yend=0), size = 0.2, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=0.6, xend=0.6, y=7, yend=5), size = 0.2, arrow = arrow(length = unit(0.25, "cm")))
library(tidyverse)
plc_dat <- data.frame(Group=c(rep('No treatment',4),rep('Placebo',40),rep('Intervention',70)))
plc_dat$Group<-factor(plc_dat$Group,levels=c("No treatment","Placebo","Intervention"))
ggplot(data=plc_dat,aes(x=Group))+geom_bar(aes(colour=Group,fill=Group))+theme_bw()+ylab('Outcome') + annotate('text',x=0.9,y=20,label='Placebo Effect',angle = 90) + geom_segment(aes(x=1, xend=1, y=40, yend=5), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=1, xend=1, y=5, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ annotate('text',x=1.9,y=55,label='Treatment Effect',angle = 90) + geom_segment(aes(x=2, xend=2, y=70, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=2, xend=2, y=40, yend=70), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ annotate('text',x=0.5,y=15,label='Hawthorne Effect',angle = 90) + geom_segment(aes(x=0.5, xend=0.5, y=-2, yend=0), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=0.5, xend=0.5, y=6, yend=4), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))
library(tidyverse)
plc_dat <- data.frame(Group=c(rep('No treatment',4),rep('Placebo',40),rep('Intervention',70)))
plc_dat$Group<-factor(plc_dat$Group,levels=c("No treatment","Placebo","Intervention"))
ggplot(data=plc_dat,aes(x=Group))+geom_bar(aes(colour=Group,fill=Group))+theme_bw()+ylab('Outcome') + annotate('text',x=0.9,y=20,label='Placebo Effect',angle = 90) + geom_segment(aes(x=1, xend=1, y=40, yend=5), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=1, xend=1, y=5, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ annotate('text',x=1.9,y=55,label='Treatment Effect',angle = 90) + geom_segment(aes(x=2, xend=2, y=70, yend=40), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=2, xend=2, y=40, yend=70), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ annotate('text',x=0.6,y=15,label='Hawthorne Effect',angle = 90) + geom_segment(aes(x=0.6, xend=0.6, y=-2, yend=0), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))+ geom_segment(aes(x=0.6, xend=0.6, y=6, yend=4), size = 0.75, arrow = arrow(length = unit(0.25, "cm")))
